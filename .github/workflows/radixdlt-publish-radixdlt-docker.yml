name: radixdlt-publish-radixdlt-docker
on:
  release:
    types: [ published ]
  push:
    branches:
      - main
      - release\/*
jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-22.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@b173b6ec0100793626c2d9e6b90435061f4fc3e5
        with:
          access_token: ${{ github.token }}

  build-docker:
    name: Build deb package needed for Docker image
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - id: set_environment
        name: Set variables
        uses: ./.github/actions/set-variables
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          ref: ${{ steps.set_environment.outputs.git_ref }}
          fetch-depth: 0
      - name: Cache Gradle packages
        uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 17
        uses: actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Build deb file
        run: |
          cd radixdlt-core/radixdlt
          ../../gradlew deb4docker
          cd ../..
          find . -name "*.deb"
      - name: Archive deb package
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb
        with:
          name: build-deb
          path: |
            radixdlt-core/docker
            retention-days: 1
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
  publish-docker:
    needs: build-docker
    name: Build and push radixdlt Docker image
    environment: publish-artifacts
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b

      - id: set_environment
        name: Set variables
        uses: ./.github/actions/set-variables

      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          ref: ${{ steps.set_environment.outputs.git_ref }}
          fetch-depth: 0

      - name: Download distribution artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: build-deb

      - name: Set up JDK 17
        uses: actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@6998d139ddd3e68c71e9e398d8e40b71a2f39812
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - id: get_version
        name: Get radixdlt version
        uses: ./.github/actions/get-version
        with:
          is_release: ${{ steps.set_environment.outputs.is_release }}

      - name: Configure AWS credentials to fetch secrets
        uses: aws-actions/configure-aws-credentials@97271860067ec931c45b8d104fbf0d15954ab85c
        with:
          role-to-assume: "arn:aws:iam::${{ secrets.SECRETS_ACCOUNT_ID }}:role/gh-common-secrets-read-access"
          aws-region: "eu-west-2"
          role-session-name: "radixdlt-publish-radixdlt-docker-${{ github.run_number }}-${{ github.run_attempt }}"

      - name: Fetch AWS secrets
        if: "${{ steps.set_environment.outputs.is_release == 'true' }}"
        uses: aws-actions/aws-secretsmanager-get-secrets@287592d14d9c9c48199db83dc182ae12af3df18e
        with:
          secret-ids: |
            GH, github-actions/common/dockerhub-credentials
          parse-json-secrets: true

      - name: Login to Dockerhub (release)
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        if: "${{ steps.set_environment.outputs.is_release == 'true' }}"
        with:
          username: ${{ env.GH_DOCKERHUB_USERNAME }}
          password: ${{ env.GH_DOCKERHUB_PASSWORD }}

      - name: Fetch AWS secrets
        if: "${{ steps.set_environment.outputs.is_release == 'false' }}"
        uses: aws-actions/aws-secretsmanager-get-secrets@287592d14d9c9c48199db83dc182ae12af3df18e
        with:
          secret-ids: |
            GH_GCR_EU_DEV_JSON_KEY, github-actions/common/gcr-credentials
          parse-json-secrets: false

      - name: Login to GCR
        if: "${{ steps.set_environment.outputs.is_release == 'false' }}"
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ env.GH_GCR_EU_DEV_JSON_KEY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

      - name: Docker build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          file: ./radixdlt-core/docker/Dockerfile.core
          tags: |
            ${{ steps.set_environment.outputs.radixdlt_image }}:${{ steps.get_version.outputs.docker_tag }}
          push: true
          platforms: linux/amd64,linux/arm64
          context: ./radixdlt-core/docker

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties