/* Copyright 2021 Radix Publishing Ltd incorporated in Jersey (Channel Islands).
 *
 * Licensed under the Radix License, Version 1.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 *
 * radixfoundation.org/licenses/LICENSE-v1
 *
 * The Licensor hereby grants permission for the Canonical version of the Work to be
 * published, distributed and used under or by reference to the Licensor’s trademark
 * Radix ® and use of any unregistered trade names, logos or get-up.
 *
 * The Licensor provides the Work (and each Contributor provides its Contributions) on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
 * including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT,
 * MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Whilst the Work is capable of being deployed, used and adopted (instantiated) to create
 * a distributed ledger it is your responsibility to test and validate the code, together
 * with all logic and performance of that code under all foreseeable scenarios.
 *
 * The Licensor does not make or purport to make and hereby excludes liability for all
 * and any representation, warranty or undertaking in any form whatsoever, whether express
 * or implied, to any entity or person, including any representation, warranty or
 * undertaking, as to the functionality security use, value or other characteristics of
 * any distributed ledger nor in respect the functioning or value of any tokens which may
 * be created stored or transferred using the Work. The Licensor does not warrant that the
 * Work or any use of the Work complies with any law or regulation in any territory where
 * it may be implemented or used or that it will be appropriate for any specific purpose.
 *
 * Neither the licensor nor any current or former employees, officers, directors, partners,
 * trustees, representatives, agents, advisors, contractors, or volunteers of the Licensor
 * shall be liable for any direct or indirect, special, incidental, consequential or other
 * losses of any kind, in tort, contract or otherwise (including but not limited to loss
 * of revenue, income or profits, or loss of use or data, or loss of reputation, or loss
 * of any economic or other opportunity of whatsoever nature or howsoever arising), arising
 * out of or in connection with (without limitation of any use, misuse, of any ledger system
 * or use made or its functionality or any performance or operation of any code or protocol
 * caused by bugs or programming or logic errors or otherwise);
 *
 * A. any offer, purchase, holding, use, sale, exchange or transmission of any
 * cryptographic keys, tokens or assets created, exchanged, stored or arising from any
 * interaction with the Work;
 *
 * B. any failure in a transmission or loss of any token or assets keys or other digital
 * artefacts due to errors in transmission;
 *
 * C. bugs, hacks, logic errors or faults in the Work or any communication;
 *
 * D. system software or apparatus including but not limited to losses caused by errors
 * in holding or transmitting tokens by any third-party;
 *
 * E. breaches or failure of security including hacker attacks, loss or disclosure of
 * password, loss of private key, unauthorised use or misuse of such passwords or keys;
 *
 * F. any losses including loss of anticipated savings or other benefits resulting from
 * use of the Work or any changes to the Work (however implemented).
 *
 * You are solely responsible for; testing, validating and evaluation of all operation
 * logic, functionality, security and appropriateness of using the Work for any commercial
 * or non-commercial purpose and for any reproduction or redistribution by You of the
 * Work. You assume all risks associated with Your use of the Work and the exercise of
 * permissions under this License.
 */

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'java-library'

configurations {
    acceptanceTestImplementation.extendsFrom testImplementation
}

sourceSets {
    acceptanceTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test/java')
            srcDir file('src/main/java')
        }
        resources.srcDir file('src/test/resources')
    }
}

task acceptanceTest(type: Test) {
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath
}

test {
    enabled false
    jacoco {
        // Don't attempt to include these in code coverage.
        enabled false
    }
}

acceptanceTest {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        outputs.upToDateWhen { false }
        showStandardStreams true
    }
    if (Os.isFamily(Os.FAMILY_UNIX)) { // there's no reason to set these properties on windows
        systemProperty 'java.security.egd', 'file:/dev/urandom'
        systemProperty 'javax.net.ssl.trustStore', '/etc/ssl/certs/java/cacerts'
        systemProperty 'javax.net.ssl.trustStoreType', 'jks'
    }
    systemProperties System.getProperties()
    jacoco {
        // Jacoco plugin fails with an exception if run on these tests.
        enabled false
    }
}

checkstyleAcceptanceTest {
    configFile rootProject.file('config/checkstyle/checkstyle_test.xml')
}

dependencies {
    api project(':radixdlt-java')
    api project(':radixdlt')

    implementation 'com.google.guava:guava'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha2'
    implementation 'com.github.docker-java:docker-java:3.2.11'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.11'
    implementation 'com.konghq:unirest-java:3.11.09:standalone'
    implementation 'org.buildobjects:jproc:2.6.2'
    implementation 'org.awaitility:awaitility:4.0.3'

    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'junit:junit'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'io.cucumber:cucumber-java:6.10.3'
    testImplementation 'io.cucumber:cucumber-junit:6.10.3'
    //testImplementation 'org.awaitility:awaitility:4.0.3'
    testImplementation 'com.github.docker-java:docker-java:3.2.8'
    testImplementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.8'
    testImplementation 'com.konghq:unirest-java:3.11.09:standalone'
}
