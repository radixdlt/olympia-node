/*
 * (C) Copyright 2021 Radix DLT Ltd
 *
 * Radix DLT Ltd licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the
 * License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.  See the License for the specific
 * language governing permissions and limitations under the License.
 */

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.adarshr.test-logger'

configurations {
    acceptanceTestImplementation.extendsFrom testImplementation
}

sourceSets {
    acceptanceTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test/java')
        }
        resources.srcDir file('src/test/resources')
    }
}

task acceptanceTest(type: Test) {
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath = sourceSets.acceptanceTest.runtimeClasspath
}

test {
    enabled false
    jacoco {
        // Don't attempt to include these in code coverage.
        enabled false
    }
}

acceptanceTest {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        outputs.upToDateWhen { false }
        showStandardStreams true
    }
    if (Os.isFamily(Os.FAMILY_UNIX)) { // there's no reason to set these properties on windows
        systemProperty 'java.security.egd', 'file:/dev/urandom'
        systemProperty 'javax.net.ssl.trustStore', '/etc/ssl/certs/java/cacerts'
        systemProperty 'javax.net.ssl.trustStoreType', 'jks'
    }
    systemProperties System.getProperties()
    jacoco {
        // Jacoco plugin fails with an exception if run on these tests.
        enabled false
    }
}

checkstyleAcceptanceTest {
    configFile rootProject.file('config/checkstyle/checkstyle_test.xml')
}

dependencies {
    implementation project(':radixdlt-java')

    implementation 'io.reactivex.rxjava2:rxjava'
    implementation 'com.google.guava:guava'

    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'

    testImplementation 'junit:junit'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'io.cucumber:cucumber-java:6.10.3'
    testImplementation 'io.cucumber:cucumber-junit:6.10.3'
    testImplementation 'org.awaitility:awaitility:4.0.3'
    testImplementation 'com.github.docker-java:docker-java:3.2.8'
    testImplementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.8'
    testImplementation 'com.konghq:unirest-java:3.11.09:standalone'

}
