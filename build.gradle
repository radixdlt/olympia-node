/* Copyright 2021 Radix Publishing Ltd incorporated in Jersey (Channel Islands).
 *
 * Licensed under the Radix License, Version 1.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at:
 *
 * radixfoundation.org/licenses/LICENSE-v1
 *
 * The Licensor hereby grants permission for the Canonical version of the Work to be
 * published, distributed and used under or by reference to the Licensor’s trademark
 * Radix ® and use of any unregistered trade names, logos or get-up.
 *
 * The Licensor provides the Work (and each Contributor provides its Contributions) on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
 * including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT,
 * MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Whilst the Work is capable of being deployed, used and adopted (instantiated) to create
 * a distributed ledger it is your responsibility to test and validate the code, together
 * with all logic and performance of that code under all foreseeable scenarios.
 *
 * The Licensor does not make or purport to make and hereby excludes liability for all
 * and any representation, warranty or undertaking in any form whatsoever, whether express
 * or implied, to any entity or person, including any representation, warranty or
 * undertaking, as to the functionality security use, value or other characteristics of
 * any distributed ledger nor in respect the functioning or value of any tokens which may
 * be created stored or transferred using the Work. The Licensor does not warrant that the
 * Work or any use of the Work complies with any law or regulation in any territory where
 * it may be implemented or used or that it will be appropriate for any specific purpose.
 *
 * Neither the licensor nor any current or former employees, officers, directors, partners,
 * trustees, representatives, agents, advisors, contractors, or volunteers of the Licensor
 * shall be liable for any direct or indirect, special, incidental, consequential or other
 * losses of any kind, in tort, contract or otherwise (including but not limited to loss
 * of revenue, income or profits, or loss of use or data, or loss of reputation, or loss
 * of any economic or other opportunity of whatsoever nature or howsoever arising), arising
 * out of or in connection with (without limitation of any use, misuse, of any ledger system
 * or use made or its functionality or any performance or operation of any code or protocol
 * caused by bugs or programming or logic errors or otherwise);
 *
 * A. any offer, purchase, holding, use, sale, exchange or transmission of any
 * cryptographic keys, tokens or assets created, exchanged, stored or arising from any
 * interaction with the Work;
 *
 * B. any failure in a transmission or loss of any token or assets keys or other digital
 * artefacts due to errors in transmission;
 *
 * C. bugs, hacks, logic errors or faults in the Work or any communication;
 *
 * D. system software or apparatus including but not limited to losses caused by errors
 * in holding or transmitting tokens by any third-party;
 *
 * E. breaches or failure of security including hacker attacks, loss or disclosure of
 * password, loss of private key, unauthorised use or misuse of such passwords or keys;
 *
 * F. any losses including loss of anticipated savings or other benefits resulting from
 * use of the Work or any changes to the Work (however implemented).
 *
 * You are solely responsible for; testing, validating and evaluation of all operation
 * logic, functionality, security and appropriateness of using the Work for any commercial
 * or non-commercial purpose and for any reproduction or redistribution by You of the
 * Work. You assume all risks associated with Your use of the Work and the exercise of
 * permissions under this License.
 */

plugins {
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'nebula.ospackage' version '8.4.1'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'me.champeau.gradle.jmh' version '0.5.1'
    id 'org.sonarqube' version '2.7.1'
    id 'com.adarshr.test-logger' version '2.1.0'
    id 'com.palantir.git-version' version '0.12.3'
    id 'com.moowork.node' version '1.3.1'
    id 'net.nemerosa.versioning' version '2.14.0'
    id 'maven-publish'
}

def radixVersion() {
    def details = versionDetails()

    def version
    if (details.isCleanTag) {
        version = details.lastTag
    } else {
        version = details.branchName
        if (version == null) {
            version = "detached-head-${details.gitHash}"
        } else {
            // Prepend last tag so builddeb doesn't choke on non-numeric branch names
            version = "${details.lastTag}-${version}"
            version = version.replaceAll('/', '~')
        }
        version = "${version}-SNAPSHOT"
    }
    return version
}

group 'com.radixdlt'
if (System.getenv("CI_VERSION")){
    version  versioning.info.full
} else {
    version radixVersion()
}

task radixCiVersion {
    doLast {
        print "radixdlt-version:$version"
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'radixdlt-github'
        property 'sonar.login', System.env.SONAR_TOKEN
    }
}

subprojects {
    apply plugin: "maven-publish"

    sonarqube {
        properties {
            property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        }
    }

    project.afterEvaluate {
        publishing {
            repositories {
                maven {
                    name = "GitHubPackages"
                    url = uri("https://maven.pkg.github.com/radixdlt/maven-pkg")
                    credentials {
                        username = System.getenv("GPR_USER") ?: ''
                        password = System.getenv("GPR_TOKEN") ?: ''
                    }
                }
            }
            publications {
                gpr(MavenPublication) {
                    from(components.java)
                }
                if(project.name == "radixdlt"){
                    gprdist(MavenPublication) {
                        artifactId = "radixdlt-dist"
                        artifact distZip
                    }
                }
            }
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/radixdlt/maven-pkg")
            credentials {
                username = System.getenv("GPR_USER") ?: ''
                password = System.getenv("GPR_TOKEN") ?: ''
            }
        }
    }

    group 'com.radixdlt'
    version rootProject.version

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.release = 11
            options.compilerArgs << "-Xlint:all"

            //TODO: uncomment once warnings will be cleared
            //options.compilerArgs << "-Werror"

            options.compilerArgs << "-Xlint:-processing"    // Not really a useful warning
            options.compilerArgs << "-Xlint:-serial"        //TODO: fix code to remove these warnings
            options.compilerArgs << "-Xlint:-deprecation"   //TODO: fix code to remove these warnings
            options.compilerArgs << "-Xlint:-unchecked"     //TODO: fix code to remove these warnings
            options.compilerArgs << "-Xlint:-rawtypes"      //TODO: fix code to remove these warnings
        }

        tasks.named("checkstyleMain") {
            configFile = rootProject.file('config/checkstyle/checkstyle.xml')
            exclude "**/org/radix/**/*.java"
        }

        tasks.named("checkstyleTest") {
            configFile = rootProject.file('config/checkstyle/checkstyle_test.xml')
            exclude "**/org/radix/**/*.java"
        }
    }

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'com.adarshr.test-logger'

    dependencyManagement {
        overriddenByDependencies = false

        dependencies {
            dependency "com.github.akarnokd:rxjava3-extensions:3.0.1"
            dependency 'io.reactivex.rxjava3:rxjava:3.0.9'
            dependency 'com.sleepycat:je:18.3.12'

            // LMAX Disruptor for async logging
            dependency 'com.lmax:disruptor:3.4.2'

            dependency 'commons-cli:commons-cli:1.4'
            dependency 'org.xerial.snappy:snappy-java:1.1.8.4'
            dependency 'io.netty:netty-all:4.1.51.Final'
            dependency('com.google.inject:guice:5.0.1') {
                exclude 'com.google.guava:guava'
            }

            dependency('com.google.inject.extensions:guice-grapher:5.0.1') {
                exclude 'com.google.guava:guava'
            }

            dependency 'io.undertow:undertow-core:2.0.32.Final'
            dependency 'io.undertow:undertow-servlet:2.0.32.Final'
            dependency 'com.stijndewitt.undertow.cors:undertow-cors-filter:0.4.0'

            dependency 'org.apache.logging.log4j:log4j-api:2.13.1'
            dependency 'org.apache.logging.log4j:log4j-core:2.13.1'
            dependency 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'

            dependency('org.reflections:reflections:0.9.11') {
                exclude 'com.google.guava:guava'
            }

            dependency 'com.google.code.gson:gson:2.8.2'
            dependency 'org.bouncycastle:bcprov-jdk15on:1.68'
            dependency 'org.bouncycastle:bcpkix-jdk15on:1.68'

            dependency 'org.json:json:20180813'

            dependency 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
            dependency 'com.fasterxml.jackson.core:jackson-core:2.12.3'
            dependency 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.3'
            dependency 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.12.3'
            dependency('com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.12.3') {
                exclude 'org.json:json'
            }
            dependency('com.fasterxml.jackson.datatype:jackson-datatype-guava:2.12.3') {
                exclude 'com.google.guava:guava'
            }

            dependency 'com.google.guava:guava:29.0-jre'

            // need at least this commit (or later): https://github.com/bitcoinj/bitcoinj/commit/7629677103dbdd80f14c63b066ed27e1fad47014
            // in order to work with BouncyCastle 1.64 or later
            // see issue: https://github.com/bitcoinj/bitcoinj/issues/1951
            dependency('org.bitcoinj:bitcoinj-core:0.15.10') {
                exclude 'com.google.guava:guava'
            }

            dependency 'org.awaitility:awaitility:4.0.3'
            dependency 'org.objenesis:objenesis:3.1'
            dependency 'org.javassist:javassist:3.27.0-GA'
            dependency 'org.mockito:mockito-core:3.5.10'
            dependency 'net.bytebuddy:byte-buddy:1.10.13'
            dependency 'net.bytebuddy:byte-buddy-agent:1.10.13'
            dependency 'org.powermock:powermock-module-junit4:2.0.7'
            dependency 'org.powermock:powermock-api-mockito2:2.0.7'
            dependency 'nl.jqno.equalsverifier:equalsverifier:3.4.2'
            dependency 'org.assertj:assertj-core:3.20.2'
            dependency 'junit:junit:4.13.1'

            dependency('com.flipkart.zjsonpatch:zjsonpatch:0.4.5') {
                exclude 'com.fasterxml.jackson.core:jackson-core'
                exclude 'com.fasterxml.jackson.core:jackson-databind'
            }

            dependency 'org.reflections:reflections:0.9.11'
            dependency 'org.openjdk.jmh:jmh-core:1.25'
            dependency 'org.openjdk.jmh:jmh-generator-annprocess:1.25'

            dependency 'com.squareup.okhttp3:okhttp:3.14.9'
            dependency 'com.squareup.okhttp3:logging-interceptor:3.14.9'
            dependency 'io.reactivex.rxjava2:rxjava:2.1.14'

            dependency 'com.google.code.gson:gson:2.8.2'
            dependency 'commons-cli:commons-cli:1.4'
            dependency 'info.picocli:picocli:4.4.0'
            dependency 'info.picocli:picocli-codegen:4.4.0'
        }
    }
}
