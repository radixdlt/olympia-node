/*
 * (C) Copyright 2020 Radix DLT Ltd
 *
 * Radix DLT Ltd licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the
 * License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.  See the License for the specific
 * language governing permissions and limitations under the License.
 */

plugins {
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'nebula.ospackage' version '8.4.1'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'me.champeau.gradle.jmh' version '0.5.1'
    id 'org.sonarqube' version '2.7.1'
    id 'com.adarshr.test-logger' version '2.1.0'
    id 'com.palantir.git-version' version '0.12.3'
    id 'com.moowork.node' version '1.3.1'
    id 'net.nemerosa.versioning' version '2.14.0'
}

def radixVersion() {
    def details = versionDetails()

    def version
    if (details.isCleanTag) {
        version = details.lastTag
    } else {
        version = details.branchName
        if (version == null) {
            version = "detached-head-${details.gitHash}"
        } else {
            // Prepend last tag so builddeb doesn't choke on non-numeric branch names
            version = "${details.lastTag}-${version}"
            version = version.replaceAll('/', '~')
        }
        version = "${version}-SNAPSHOT"
    }
    return version
}

group 'com.radixdlt'
version radixVersion()

subprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    group 'com.radixdlt'
    version rootProject.version

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.release = 11
            options.compilerArgs << "-Xlint:all"

            //TODO: uncomment once warnings will be cleared
            //options.compilerArgs << "-Werror"

            options.compilerArgs << "-Xlint:-processing"    // Not really a useful warning
            options.compilerArgs << "-Xlint:-serial"        //TODO: fix code to remove these warnings
            options.compilerArgs << "-Xlint:-deprecation"   //TODO: fix code to remove these warnings
            options.compilerArgs << "-Xlint:-unchecked"     //TODO: fix code to remove these warnings
            options.compilerArgs << "-Xlint:-rawtypes"      //TODO: fix code to remove these warnings
        }

        tasks.named("checkstyleMain") { 
            configFile = rootProject.file('config/checkstyle/checkstyle.xml')
            exclude "**/org/radix/**/*.java"
            exclude "**/examples/**/*.java"
        }

        tasks.named("checkstyleTest") { 
            configFile = rootProject.file('config/checkstyle/checkstyle_test.xml')
            exclude "**/org/radix/**/*.java"
            exclude "**/examples/**/*.java"
        }
    }

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'com.adarshr.test-logger'

    dependencyManagement {
        overriddenByDependencies = false

        dependencies {
            dependency 'io.reactivex.rxjava3:rxjava:3.0.0'
            dependency 'com.sleepycat:je:18.3.12'

            // LMAX Disruptor for async logging
            dependency 'com.lmax:disruptor:3.4.2'

            dependency 'commons-cli:commons-cli:1.4'
            dependency 'org.xerial.snappy:snappy-java:1.1.7.3'
            dependency 'io.netty:netty-all:4.1.51.Final'
            dependency('com.google.inject:guice:4.2.3') {
                exclude 'com.google.guava:guava'
            }

            dependency('com.google.inject.extensions:guice-grapher:4.2.3') {
                exclude 'com.google.guava:guava'
            }

            dependency 'io.undertow:undertow-core:2.0.32.Final'
            dependency 'io.undertow:undertow-servlet:2.0.32.Final'
            dependency 'com.stijndewitt.undertow.cors:undertow-cors-filter:0.4.0'

            dependency 'org.apache.logging.log4j:log4j-api:2.13.1'
            dependency 'org.apache.logging.log4j:log4j-core:2.13.1'
            dependency 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'

            dependency('org.reflections:reflections:0.9.11') {
                exclude 'com.google.guava:guava'
            }

            dependency 'com.google.code.gson:gson:2.8.2'
            dependency 'org.bouncycastle:bcprov-jdk15to18:1.65'
            dependency 'org.bouncycastle:bcpkix-jdk15to18:1.65'

            dependency 'org.json:json:20180813'

            dependency 'com.github.radixdlt:jackson-databind:feature~strict-property-ordering-downgraded-version-SNAPSHOT'

            dependency 'com.fasterxml.jackson.core:jackson-core:2.11.3'
            dependency 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.11.3'
            dependency('com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.11.3') {
                exclude 'org.json:json'
            }
            dependency('com.fasterxml.jackson.datatype:jackson-datatype-guava:2.11.3') {
                exclude 'com.google.guava:guava'
            }

            dependency 'com.google.guava:guava:29.0-jre'

            // need at least this commit (or later): https://github.com/bitcoinj/bitcoinj/commit/7629677103dbdd80f14c63b066ed27e1fad47014
            // in order to work with BouncyCastle 1.64 or later
            // see issue: https://github.com/bitcoinj/bitcoinj/issues/1951
            dependency('com.github.bitcoinj:bitcoinj:7c31dcb') {
                exclude 'com.google.guava:guava'
            }

            dependency 'org.awaitility:awaitility:4.0.3'
            dependency 'org.objenesis:objenesis:3.1'
            dependency 'org.javassist:javassist:3.27.0-GA'
            dependency 'org.mockito:mockito-core:3.5.10'
            dependency 'net.bytebuddy:byte-buddy:1.10.13'
            dependency 'net.bytebuddy:byte-buddy-agent:1.10.13'
            dependency 'org.powermock:powermock-module-junit4:2.0.7'
            dependency 'org.powermock:powermock-api-mockito2:2.0.7'
            dependency 'nl.jqno.equalsverifier:equalsverifier:3.4.2'
            dependency 'org.assertj:assertj-core:3.11.1'
            dependency 'junit:junit:4.13.1'

            dependency('com.flipkart.zjsonpatch:zjsonpatch:0.4.5') {
                exclude 'com.fasterxml.jackson.core:jackson-core'
                exclude 'com.fasterxml.jackson.core:jackson-databind'
            }

            dependency 'org.reflections:reflections:0.9.11'
            dependency 'org.openjdk.jmh:jmh-core:1.25'
            dependency 'org.openjdk.jmh:jmh-generator-annprocess:1.25'

            dependency 'com.squareup.okhttp3:okhttp:3.12.11'
            dependency 'com.squareup.okhttp3:logging-interceptor:3.12.11'
            dependency 'io.reactivex.rxjava2:rxjava:2.1.14'

            dependency 'com.google.code.gson:gson:2.8.2'
            dependency 'commons-cli:commons-cli:1.4'
            dependency 'info.picocli:picocli:4.4.0'
            dependency 'info.picocli:picocli-codegen:4.4.0'
        }
    }
}
